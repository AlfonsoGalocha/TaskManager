{"ast":null,"code":"var _jsxFileName = \"/home/alfonso/Desktop/UCJC/a\\xF1o4/Desarrollo Multiplataforma/Practica4/guia/tasks-app/llamada-api/src/TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from './SupabaseClient.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  onSave,\n  taskToEdit,\n  handleEdit\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  useEffect(() => {\n    if (taskToEdit) {\n      setTitle(taskToEdit.title);\n      setDescription(taskToEdit.description);\n    }\n  }, [taskToEdit]);\n  const handleSubmit = async () => {\n    if (taskToEdit) {\n      await handleEdit(taskToEdit.id, title, description);\n    } else {\n      const {\n        error\n      } = await supabase.from('tasks').insert([{\n        title,\n        description\n      }]);\n      if (!error) onSave();\n    }\n    setTitle('');\n    setDescription('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"title-form\",\n      type: \"text\",\n      placeholder: \"T\\xEDtulo\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"description-form\",\n      placeholder: \"Descripci\\xF3n\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"save-form\",\n      onClick: handleSubmit,\n      children: \"Guardar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n};\n_s(TaskForm, \"IbsZ/fxR6UG1ESsIpEaeaQ87Gic=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","TaskForm","onSave","taskToEdit","handleEdit","_s","title","setTitle","description","setDescription","handleSubmit","id","error","from","insert","children","className","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/alfonso/Desktop/UCJC/año4/Desarrollo Multiplataforma/Practica4/guia/tasks-app/llamada-api/src/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from './SupabaseClient.ts';\n\nconst TaskForm = ({ onSave, taskToEdit, handleEdit }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  useEffect(() => {\n    if (taskToEdit) {\n      setTitle(taskToEdit.title);\n      setDescription(taskToEdit.description);\n    }\n  }, [taskToEdit]);\n\n  const handleSubmit = async () => {\n    if (taskToEdit) {\n      await handleEdit(taskToEdit.id, title, description);\n    } else {\n      const { error } = await supabase.from('tasks').insert([{ title, description }]);\n      if (!error) onSave();\n    }\n    setTitle('');\n    setDescription('');\n  };\n\n\n    return (\n      <div>\n        <input\n          className='title-form'\n          type=\"text\"\n          placeholder=\"Título\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <textarea\n          className='description-form'\n          placeholder=\"Descripción\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        ></textarea>\n        <button className='save-form' onClick={handleSubmit}>Guardar</button>\n      </div>\n    );\n  };\n\nexport default TaskForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,MAAM;EAAEC,UAAU;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,IAAIM,UAAU,EAAE;MACdI,QAAQ,CAACJ,UAAU,CAACG,KAAK,CAAC;MAC1BG,cAAc,CAACN,UAAU,CAACK,WAAW,CAAC;IACxC;EACF,CAAC,EAAE,CAACL,UAAU,CAAC,CAAC;EAEhB,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIP,UAAU,EAAE;MACd,MAAMC,UAAU,CAACD,UAAU,CAACQ,EAAE,EAAEL,KAAK,EAAEE,WAAW,CAAC;IACrD,CAAC,MAAM;MACL,MAAM;QAAEI;MAAM,CAAC,GAAG,MAAMd,QAAQ,CAACe,IAAI,CAAC,OAAO,CAAC,CAACC,MAAM,CAAC,CAAC;QAAER,KAAK;QAAEE;MAAY,CAAC,CAAC,CAAC;MAC/E,IAAI,CAACI,KAAK,EAAEV,MAAM,CAAC,CAAC;IACtB;IACAK,QAAQ,CAAC,EAAE,CAAC;IACZE,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAGC,oBACET,OAAA;IAAAe,QAAA,gBACEf,OAAA;MACEgB,SAAS,EAAC,YAAY;MACtBC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,WAAQ;MACpBC,KAAK,EAAEb,KAAM;MACbc,QAAQ,EAAGC,CAAC,IAAKd,QAAQ,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACF1B,OAAA;MACEgB,SAAS,EAAC,kBAAkB;MAC5BE,WAAW,EAAC,gBAAa;MACzBC,KAAK,EAAEX,WAAY;MACnBY,QAAQ,EAAGC,CAAC,IAAKZ,cAAc,CAACY,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eACZ1B,OAAA;MAAQgB,SAAS,EAAC,WAAW;MAACW,OAAO,EAAEjB,YAAa;MAAAK,QAAA,EAAC;IAAO;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEV,CAAC;AAACrB,EAAA,CAzCEJ,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}