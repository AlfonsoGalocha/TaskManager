{"ast":null,"code":"var _jsxFileName = \"/home/alfonso/Desktop/UCJC/a\\xF1o4/Desarrollo Multiplataforma/llamada-api/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { createClient } from '@supabase/supabase-js';\n\n// Configura el cliente de Supabase\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = 'https://lmkknxrqzmtwiyulujei.supabase.co';\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imxta2tueHJxem10d2l5dWx1amVpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzA5Njg5OTksImV4cCI6MjA0NjU0NDk5OX0.Z8T1Cu2YVhfQFCsxfCDdJkmaI2FRp4fGVWt3tdXl9gU';\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\nfunction App() {\n  _s();\n  // Estado para almacenar las publicaciones\n  const [posts, setPosts] = useState([]);\n\n  // Llamada a la API al cargar el componente\n\n  // Función asíncrona para obtener los datos\n  const fetchPosts = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('prueba1').select('*');\n    if (error) {\n      console.error('Error fetching data:', error);\n    } else {\n      setPosts(data); // Actualiza el estado con los datos obtenidos\n    }\n  };\n  useEffect(() => {\n    fetchPosts(); // Llama a la función para obtener los datos\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Publicaciones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","createClient","jsxDEV","_jsxDEV","supabaseUrl","supabaseAnonKey","supabase","App","_s","posts","setPosts","fetchPosts","data","error","from","select","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","title","body","id","_c","$RefreshReg$"],"sources":["/home/alfonso/Desktop/UCJC/año4/Desarrollo Multiplataforma/llamada-api/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { createClient } from '@supabase/supabase-js';\n\n// Configura el cliente de Supabase\nconst supabaseUrl = 'https://lmkknxrqzmtwiyulujei.supabase.co';\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imxta2tueHJxem10d2l5dWx1amVpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzA5Njg5OTksImV4cCI6MjA0NjU0NDk5OX0.Z8T1Cu2YVhfQFCsxfCDdJkmaI2FRp4fGVWt3tdXl9gU';\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\n\nfunction App() {\n  // Estado para almacenar las publicaciones\n  const [posts, setPosts] = useState([]);\n\n  // Llamada a la API al cargar el componente\n  \n  // Función asíncrona para obtener los datos\n  const fetchPosts = async () => {\n    const { data, error } = await supabase\n      .from('prueba1')\n      .select('*');\n\n    if (error) {\n      console.error('Error fetching data:', error);\n    } else {\n      setPosts(data); // Actualiza el estado con los datos obtenidos\n    }\n  }\n  useEffect(() => {\n    fetchPosts(); // Llama a la función para obtener los datos\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Publicaciones</h1>\n      <div className=\"posts\">\n        {posts.map((post) => (\n          <div key={post.id} className=\"post\">\n            <h2>{post.title}</h2>\n            <p>{post.body}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,SAASC,YAAY,QAAQ,uBAAuB;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAG,0CAA0C;AAC9D,MAAMC,eAAe,GAAG,kNAAkN;AAC1O,MAAMC,QAAQ,GAAGL,YAAY,CAACG,WAAW,EAAEC,eAAe,CAAC;AAE3D,SAASE,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEtC;;EAEA;EACA,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMP,QAAQ,CACnCQ,IAAI,CAAC,SAAS,CAAC,CACfC,MAAM,CAAC,GAAG,CAAC;IAEd,IAAIF,KAAK,EAAE;MACTG,OAAO,CAACH,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,MAAM;MACLH,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;IAClB;EACF,CAAC;EACDb,SAAS,CAAC,MAAM;IACdY,UAAU,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBf,OAAA;MAAAe,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBnB,OAAA;MAAKc,SAAS,EAAC,OAAO;MAAAC,QAAA,EACnBT,KAAK,CAACc,GAAG,CAAEC,IAAI,iBACdrB,OAAA;QAAmBc,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACjCf,OAAA;UAAAe,QAAA,EAAKM,IAAI,CAACC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBnB,OAAA;UAAAe,QAAA,EAAIM,IAAI,CAACE;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFVE,IAAI,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACd,EAAA,CAnCQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}