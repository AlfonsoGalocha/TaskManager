{"ast":null,"code":"var _jsxFileName = \"/home/alfonso/Desktop/UCJC/a\\xF1o4/Desarrollo Multiplataforma/Practica4/guia/tasks-app/llamada-api/src/TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  onSave,\n  taskToEdit,\n  handleSubmit,\n  handleEdit\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  // Efecto para cargar la tarea en edición\n  useEffect(() => {\n    if (taskToEdit) {\n      setTitle(taskToEdit.title);\n      setDescription(taskToEdit.description);\n    } else {\n      setTitle('');\n      setDescription('');\n    }\n  }, [taskToEdit]);\n\n  // Manejar el envío del formulario\n  const handleFormSubmit = async () => {\n    if (taskToEdit) {\n      await handleEdit(taskToEdit.id, title, description); // Editar tarea\n    } else {\n      await handleSubmit(title, description); // Crear nueva tarea\n    }\n    setTitle('');\n    setDescription('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"title-form\",\n      type: \"text\",\n      placeholder: \"T\\xEDtulo\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"description-form\",\n      placeholder: \"Descripci\\xF3n\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"save-form\",\n      onClick: handleFormSubmit,\n      children: taskToEdit ? 'Update' : 'Save'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"IbsZ/fxR6UG1ESsIpEaeaQ87Gic=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TaskForm","onSave","taskToEdit","handleSubmit","handleEdit","_s","title","setTitle","description","setDescription","handleFormSubmit","id","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/alfonso/Desktop/UCJC/año4/Desarrollo Multiplataforma/Practica4/guia/tasks-app/llamada-api/src/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst TaskForm = ({ onSave, taskToEdit, handleSubmit, handleEdit }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  // Efecto para cargar la tarea en edición\n  useEffect(() => {\n    if (taskToEdit) {\n      setTitle(taskToEdit.title);\n      setDescription(taskToEdit.description);\n    } else {\n      setTitle('');\n      setDescription('');\n    }\n  }, [taskToEdit]);\n\n  // Manejar el envío del formulario\n  const handleFormSubmit = async () => {\n    if (taskToEdit) {\n      await handleEdit(taskToEdit.id, title, description); // Editar tarea\n    } else {\n      await handleSubmit(title, description); // Crear nueva tarea\n    }\n    setTitle('');\n    setDescription('');\n  };\n\n  return (\n    <div className=\"task-form\">\n      <input\n        className=\"title-form\"\n        type=\"text\"\n        placeholder=\"Título\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n      />\n      <textarea\n        className=\"description-form\"\n        placeholder=\"Descripción\"\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n      ></textarea>\n      <button className=\"save-form\" onClick={handleFormSubmit}>\n        {taskToEdit ? 'Update' : 'Save'}\n      </button>\n    </div>\n  );\n};\n\nexport default TaskForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,MAAM;EAAEC,UAAU;EAAEC,YAAY;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACAC,SAAS,CAAC,MAAM;IACd,IAAIK,UAAU,EAAE;MACdK,QAAQ,CAACL,UAAU,CAACI,KAAK,CAAC;MAC1BG,cAAc,CAACP,UAAU,CAACM,WAAW,CAAC;IACxC,CAAC,MAAM;MACLD,QAAQ,CAAC,EAAE,CAAC;MACZE,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC,EAAE,CAACP,UAAU,CAAC,CAAC;;EAEhB;EACA,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAIR,UAAU,EAAE;MACd,MAAME,UAAU,CAACF,UAAU,CAACS,EAAE,EAAEL,KAAK,EAAEE,WAAW,CAAC,CAAC,CAAC;IACvD,CAAC,MAAM;MACL,MAAML,YAAY,CAACG,KAAK,EAAEE,WAAW,CAAC,CAAC,CAAC;IAC1C;IACAD,QAAQ,CAAC,EAAE,CAAC;IACZE,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,oBACEV,OAAA;IAAKa,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBd,OAAA;MACEa,SAAS,EAAC,YAAY;MACtBE,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,WAAQ;MACpBC,KAAK,EAAEV,KAAM;MACbW,QAAQ,EAAGC,CAAC,IAAKX,QAAQ,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFxB,OAAA;MACEa,SAAS,EAAC,kBAAkB;MAC5BG,WAAW,EAAC,gBAAa;MACzBC,KAAK,EAAER,WAAY;MACnBS,QAAQ,EAAGC,CAAC,IAAKT,cAAc,CAACS,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eACZxB,OAAA;MAAQa,SAAS,EAAC,WAAW;MAACY,OAAO,EAAEd,gBAAiB;MAAAG,QAAA,EACrDX,UAAU,GAAG,QAAQ,GAAG;IAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAClB,EAAA,CA9CIL,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAgDd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}