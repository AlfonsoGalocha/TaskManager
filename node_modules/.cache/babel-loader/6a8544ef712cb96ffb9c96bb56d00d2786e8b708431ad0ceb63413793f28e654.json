{"ast":null,"code":"var _jsxFileName = \"/home/alfonso/Desktop/UCJC/a\\xF1o4/Desarrollo Multiplataforma/llamada-api/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { createClient } from '@supabase/supabase-js';\n\n// Configura el cliente de Supabase\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = 'https://lmkknxrqzmtwiyulujei.supabase.co';\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imxta2tueHJxem10d2l5dWx1amVpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzA5Njg5OTksImV4cCI6MjA0NjU0NDk5OX0.Z8T1Cu2YVhfQFCsxfCDdJkmaI2FRp4fGVWt3tdXl9gU';\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\nfunction App() {\n  _s();\n  // Estado para almacenar las publicaciones\n  const [posts, setPosts] = useState([]);\n\n  // Llamada a la API al cargar el componente\n\n  // Función asíncrona para obtener los datos\n  const fetchPosts = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('prueba').select('*');\n    if (error) {\n      console.error('Error fetching data:', error);\n    } else {\n      setPosts(data); // Actualiza el estado con los datos obtenidos\n    }\n  };\n  const Insert = async () => {\n    const {\n      error\n    } = await supabase.from('prueba').insert({\n      id: 2,\n      title: 'Denmark',\n      body: 'Copenhagen'\n    });\n    if (error) {\n      console.error('Error inserting data:', error);\n    }\n  };\n  const Update = async () => {\n    const {\n      error\n    } = await supabase.from('prueba').update({\n      title: 'Australia'\n    }).eq('id', 2);\n    if (error) {\n      console.error('Error updating data:', error);\n    }\n  };\n  fetchPosts(); // Llama a la función para obtener los datos\n  Insert();\n  Update();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Publicaciones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QFg9xhJ0x9yrnvUQrdhfY5IZlDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","createClient","jsxDEV","_jsxDEV","supabaseUrl","supabaseAnonKey","supabase","App","_s","posts","setPosts","fetchPosts","data","error","from","select","console","Insert","insert","id","title","body","Update","update","eq","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","_c","$RefreshReg$"],"sources":["/home/alfonso/Desktop/UCJC/año4/Desarrollo Multiplataforma/llamada-api/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { createClient } from '@supabase/supabase-js';\n\n// Configura el cliente de Supabase\nconst supabaseUrl = 'https://lmkknxrqzmtwiyulujei.supabase.co';\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imxta2tueHJxem10d2l5dWx1amVpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzA5Njg5OTksImV4cCI6MjA0NjU0NDk5OX0.Z8T1Cu2YVhfQFCsxfCDdJkmaI2FRp4fGVWt3tdXl9gU';\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\n\nfunction App() {\n  // Estado para almacenar las publicaciones\n  const [posts, setPosts] = useState([]);\n\n  // Llamada a la API al cargar el componente\n  \n  // Función asíncrona para obtener los datos\n  const fetchPosts = async () => {\n    const { data, error } = await supabase\n      .from('prueba')\n      .select('*');\n\n    if (error) {\n      console.error('Error fetching data:', error);\n    } else {\n      setPosts(data); // Actualiza el estado con los datos obtenidos\n    }\n  }\n\n  const Insert = async () => {\n    const { error } = await supabase\n      .from('prueba')\n      .insert({ id: 2, title: 'Denmark', body: 'Copenhagen' });\n\n    if (error) {\n      console.error('Error inserting data:', error);\n    }\n  };\n\n\n  const Update = async () => {\n  const { error } = await supabase\n  .from('prueba')\n  .update({ title: 'Australia' })\n  .eq('id', 2)\n\n  if (error) {\n    console.error('Error updating data:', error);\n  }\n  };\n\n\n  \n    fetchPosts(); // Llama a la función para obtener los datos\n    Insert();\n    Update();\n\n\n  return (\n    <div className=\"App\">\n      <h1>Publicaciones</h1>\n      <div className=\"posts\">\n        {posts.map((post) => (\n          <div key={post.id} className=\"post\">\n            <h2>{post.title}</h2>\n            <p>{post.body}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n  \n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}