{"ast":null,"code":"var _jsxFileName = \"/home/alfonso/Desktop/UCJC/a\\xF1o4/Desarrollo Multiplataforma/llamada-api/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css'; // Aquí puedes añadir tus estilos\n\n// Importamos la librería de supabase\nimport { createClient } from '@supabase/supabase-js';\n\n// Configuración de la conexión a Supabase\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = 'https://xfoffqccaewuaeiyclpi.supabase.co';\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inhmb2ZmcWNjYWV3dWFlaXljbHBpIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTczMTE0ODY2OSwiZXhwIjoyMDQ2NzI0NjY5fQ.XyTOIg15jqThBhsJIWW1SlEjZBGBmqMOFK5_B005h3g';\n\n// Crear el cliente de Supabase\nconst supabase = createClient(supabaseUrl, supabaseKey);\nfunction App() {\n  _s();\n  const [data, setData] = useState([]); // Estado para guardar los datos\n  const [loading, setLoading] = useState(true); // Estado para el indicador de carga\n\n  // Función para obtener los datos de Supabase\n  const fetchData = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('prueba') // Nombre de la tabla\n    .select('*'); // Seleccionar todos los campos\n\n    if (error) {\n      console.error('Error fetching data:', error.message);\n    } else {\n      setData(data); // Guardar los datos en el estado\n    }\n    setLoading(false); // Cambiar el estado de carga cuando se obtiene la respuesta\n  };\n\n  //funcion para insertar los datos en la tabla\n  const insertData = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('prueba').insert([{\n      title: 'Prueba 1'\n    }, {\n      title: 'Prueba 2'\n    }, {\n      title: 'Prueba 3'\n    }]);\n    if (error) {\n      console.error('Error inserting data:', error.message);\n    } else {\n      console.log('Data inserted successfully:', data);\n    }\n  };\n\n  // Usamos useEffect para ejecutar fetchData cuando el componente se monta\n  useEffect(() => {\n    insertData();\n    fetchData();\n  }, []); // Solo se ejecuta una vez cuando el componente se monta\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Datos de la tabla \\\"prueba\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cargando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: data.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Titulo: \", item.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No hay datos disponibles.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YP7e7Smzxlgf2d3MqLcgRZjo83U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","createClient","jsxDEV","_jsxDEV","supabaseUrl","supabaseKey","supabase","App","_s","data","setData","loading","setLoading","fetchData","error","from","select","console","message","insertData","insert","title","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","id","_c","$RefreshReg$"],"sources":["/home/alfonso/Desktop/UCJC/año4/Desarrollo Multiplataforma/llamada-api/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';  // Aquí puedes añadir tus estilos\n\n// Importamos la librería de supabase\nimport { createClient } from '@supabase/supabase-js';\n\n// Configuración de la conexión a Supabase\nconst supabaseUrl = 'https://xfoffqccaewuaeiyclpi.supabase.co';\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inhmb2ZmcWNjYWV3dWFlaXljbHBpIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTczMTE0ODY2OSwiZXhwIjoyMDQ2NzI0NjY5fQ.XyTOIg15jqThBhsJIWW1SlEjZBGBmqMOFK5_B005h3g';\n\n// Crear el cliente de Supabase\nconst supabase = createClient(supabaseUrl, supabaseKey);\n\nfunction App() {\n  const [data, setData] = useState([]);  // Estado para guardar los datos\n  const [loading, setLoading] = useState(true);  // Estado para el indicador de carga\n\n  // Función para obtener los datos de Supabase\n  const fetchData = async () => {\n    const { data, error } = await supabase\n      .from('prueba')  // Nombre de la tabla\n      .select('*');  // Seleccionar todos los campos\n\n    if (error) {\n      console.error('Error fetching data:', error.message);\n    } else {\n      setData(data);  // Guardar los datos en el estado\n    }\n    setLoading(false);  // Cambiar el estado de carga cuando se obtiene la respuesta\n  };\n\n  //funcion para insertar los datos en la tabla\n  const insertData = async () => {\n    const { data, error } = await supabase\n      .from('prueba')\n      .insert([\n        { title: 'Prueba 1' },\n        { title: 'Prueba 2' },\n        { title: 'Prueba 3' },\n      ]);\n\n    if (error) {\n      console.error('Error inserting data:', error.message);\n    } else {\n      console.log('Data inserted successfully:', data);\n    }\n  };\n\n  // Usamos useEffect para ejecutar fetchData cuando el componente se monta\n  useEffect(() => {\n    insertData();\n    fetchData();\n  }, []);  // Solo se ejecuta una vez cuando el componente se monta\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Datos de la tabla \"prueba\"</h1>\n        \n        {loading ? (\n          <p>Cargando...</p>\n        ) : (\n          <div>\n            {data.length > 0 ? (\n              <ul>\n                {data.map((item) => (\n                  <li key={item.id}>\n                    <p>Titulo: {item.title}</p>\n                  </li>))}\n              </ul>\n            ) : (\n              <p>No hay datos disponibles.</p>\n            )}\n          </div>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}