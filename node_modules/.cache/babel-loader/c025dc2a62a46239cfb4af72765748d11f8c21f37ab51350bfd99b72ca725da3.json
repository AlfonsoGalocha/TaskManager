{"ast":null,"code":"var _jsxFileName = \"/home/alfonso/Desktop/UCJC/a\\xF1o4/Desarrollo Multiplataforma/Practica4/guia/tasks-app/llamada-api/src/TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { supabase } from './SupabaseClient.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  onSave\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const handleSubmit = async () => {\n    const {\n      error\n    } = await supabase.from('tasks').insert([{\n      title,\n      description\n    }]);\n    if (!error) onSave();\n  };\n  const markAsCompleted = async id => {\n    const {\n      error\n    } = await supabase.from('tasks').update({\n      completed: true\n    }).eq('id', id);\n    if (error) console.error(error);\n  };\n  const deleteTask = async id => {\n    const {\n      error\n    } = await supabase.from('tasks').delete().eq('id', id);\n    if (error) console.error(error);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"title-form\",\n      type: \"text\",\n      placeholder: \"T\\xEDtulo\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"description-form\",\n      placeholder: \"Descripci\\xF3n\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Guardar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n};\n_s(TaskForm, \"1UKQWTfo2RWmkwPNsekAdQbvqFk=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","supabase","jsxDEV","_jsxDEV","TaskForm","onSave","_s","title","setTitle","description","setDescription","handleSubmit","error","from","insert","markAsCompleted","id","update","completed","eq","console","deleteTask","delete","children","className","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/alfonso/Desktop/UCJC/año4/Desarrollo Multiplataforma/Practica4/guia/tasks-app/llamada-api/src/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { supabase } from './SupabaseClient.ts';\n\nconst TaskForm = ({ onSave }) => {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n\n    const handleSubmit = async () => {\n      const { error } = await supabase.from('tasks').insert([{ title, description }]);\n      if (!error) onSave();\n    };\n\n    const markAsCompleted = async (id) => {\n        const { error } = await supabase.from('tasks').update({ completed: true }).eq('id', id);\n        if (error) console.error(error);\n    };\n\n    const deleteTask = async (id) => {\n        const { error } = await supabase.from('tasks').delete().eq('id', id);\n        if (error) console.error(error);\n    };\n\n    return (\n      <div>\n        <input\n          className='title-form'\n          type=\"text\"\n          placeholder=\"Título\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <textarea\n          className='description-form'\n          placeholder=\"Descripción\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        ></textarea>\n        <button onClick={handleSubmit}>Guardar</button>\n      </div>\n    );\n  };\n\nexport default TaskForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAM;MAAEC;IAAM,CAAC,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,OAAO,CAAC,CAACC,MAAM,CAAC,CAAC;MAAEP,KAAK;MAAEE;IAAY,CAAC,CAAC,CAAC;IAC/E,IAAI,CAACG,KAAK,EAAEP,MAAM,CAAC,CAAC;EACtB,CAAC;EAED,MAAMU,eAAe,GAAG,MAAOC,EAAE,IAAK;IAClC,MAAM;MAAEJ;IAAM,CAAC,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,OAAO,CAAC,CAACI,MAAM,CAAC;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC,CAACC,EAAE,CAAC,IAAI,EAAEH,EAAE,CAAC;IACvF,IAAIJ,KAAK,EAAEQ,OAAO,CAACR,KAAK,CAACA,KAAK,CAAC;EACnC,CAAC;EAED,MAAMS,UAAU,GAAG,MAAOL,EAAE,IAAK;IAC7B,MAAM;MAAEJ;IAAM,CAAC,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,OAAO,CAAC,CAACS,MAAM,CAAC,CAAC,CAACH,EAAE,CAAC,IAAI,EAAEH,EAAE,CAAC;IACpE,IAAIJ,KAAK,EAAEQ,OAAO,CAACR,KAAK,CAACA,KAAK,CAAC;EACnC,CAAC;EAED,oBACET,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MACEqB,SAAS,EAAC,YAAY;MACtBC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,WAAQ;MACpBC,KAAK,EAAEpB,KAAM;MACbqB,QAAQ,EAAGC,CAAC,IAAKrB,QAAQ,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACF/B,OAAA;MACEqB,SAAS,EAAC,kBAAkB;MAC5BE,WAAW,EAAC,gBAAa;MACzBC,KAAK,EAAElB,WAAY;MACnBmB,QAAQ,EAAGC,CAAC,IAAKnB,cAAc,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eACZ/B,OAAA;MAAQgC,OAAO,EAAExB,YAAa;MAAAY,QAAA,EAAC;IAAO;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV,CAAC;AAAC5B,EAAA,CArCEF,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AAuCd,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}