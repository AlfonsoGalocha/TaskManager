{"ast":null,"code":"import React,{useEffect,useState}from'react';import'./App.css';import{createClient}from'@supabase/supabase-js';// Configura el cliente de Supabase\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const supabaseUrl='https://lmkknxrqzmtwiyulujei.supabase.co';const supabaseAnonKey='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imxta2tueHJxem10d2l5dWx1amVpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzA5Njg5OTksImV4cCI6MjA0NjU0NDk5OX0.Z8T1Cu2YVhfQFCsxfCDdJkmaI2FRp4fGVWt3tdXl9gU';const supabase=createClient(supabaseUrl,supabaseAnonKey);function App(){// Estado para almacenar las publicaciones\nconst[posts,setPosts]=useState([]);// Llamada a la API al cargar el componente\n// Función asíncrona para obtener los datos\nconst fetchPosts=async()=>{const{data,error}=await supabase.from('prueba').select('*');if(error){console.error('Error fetching data:',error);}else{setPosts(data);// Actualiza el estado con los datos obtenidos\n}};const Insert=async()=>{const{error}=await supabase.from('prueba1').insert({id:1,title:'Denmark',body:'Copenhagen'});if(error){console.error('Error inserting data:',error);}};const Update=async()=>{const{error}=await supabase.from('countries').update({name:'Australia'}).eq('id',1);if(error){console.error('Error updating data:',error);}};useEffect(()=>{fetchPosts();// Llama a la función para obtener los datos\nInsert();Update();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Publicaciones\"}),/*#__PURE__*/_jsx(\"div\",{className:\"posts\",children:posts.map(post=>/*#__PURE__*/_jsx(\"div\",{className:\"post\"},post.id))})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","createClient","jsx","_jsx","jsxs","_jsxs","supabaseUrl","supabaseAnonKey","supabase","App","posts","setPosts","fetchPosts","data","error","from","select","console","Insert","insert","id","title","body","Update","update","name","eq","className","children","map","post"],"sources":["/home/alfonso/Desktop/UCJC/año4/Desarrollo Multiplataforma/llamada-api/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { createClient } from '@supabase/supabase-js';\n\n// Configura el cliente de Supabase\nconst supabaseUrl = 'https://lmkknxrqzmtwiyulujei.supabase.co';\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imxta2tueHJxem10d2l5dWx1amVpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzA5Njg5OTksImV4cCI6MjA0NjU0NDk5OX0.Z8T1Cu2YVhfQFCsxfCDdJkmaI2FRp4fGVWt3tdXl9gU';\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\n\nfunction App() {\n  // Estado para almacenar las publicaciones\n  const [posts, setPosts] = useState([]);\n\n  // Llamada a la API al cargar el componente\n  \n  // Función asíncrona para obtener los datos\n  const fetchPosts = async () => {\n    const { data, error } = await supabase\n      .from('prueba')\n      .select('*');\n\n    if (error) {\n      console.error('Error fetching data:', error);\n    } else {\n      setPosts(data); // Actualiza el estado con los datos obtenidos\n    }\n  }\n\n  const Insert = async () => {\n    const { error } = await supabase\n      .from('prueba1')\n      .insert({ id: 1, title: 'Denmark', body: 'Copenhagen' });\n\n    if (error) {\n      console.error('Error inserting data:', error);\n    }\n  };\n\n\n  const Update = async () => {\n  const { error } = await supabase\n  .from('countries')\n  .update({ name: 'Australia' })\n  .eq('id', 1)\n\n  if (error) {\n    console.error('Error updating data:', error);\n  }\n  };\n\n\n  useEffect(() => {\n    fetchPosts(); // Llama a la función para obtener los datos\n    Insert();\n    Update();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Publicaciones</h1>\n      <div className=\"posts\">\n        {posts.map((post) => (\n          <div key={post.id} className=\"post\">\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,WAAW,CAClB,OAASC,YAAY,KAAQ,uBAAuB,CAEpD;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,WAAW,CAAG,0CAA0C,CAC9D,KAAM,CAAAC,eAAe,CAAG,kNAAkN,CAC1O,KAAM,CAAAC,QAAQ,CAAGP,YAAY,CAACK,WAAW,CAAEC,eAAe,CAAC,CAE3D,QAAS,CAAAE,GAAGA,CAAA,CAAG,CACb;AACA,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAEtC;AAEA;AACA,KAAM,CAAAY,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,KAAM,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAN,QAAQ,CACnCO,IAAI,CAAC,QAAQ,CAAC,CACdC,MAAM,CAAC,GAAG,CAAC,CAEd,GAAIF,KAAK,CAAE,CACTG,OAAO,CAACH,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC9C,CAAC,IAAM,CACLH,QAAQ,CAACE,IAAI,CAAC,CAAE;AAClB,CACF,CAAC,CAED,KAAM,CAAAK,MAAM,CAAG,KAAAA,CAAA,GAAY,CACzB,KAAM,CAAEJ,KAAM,CAAC,CAAG,KAAM,CAAAN,QAAQ,CAC7BO,IAAI,CAAC,SAAS,CAAC,CACfI,MAAM,CAAC,CAAEC,EAAE,CAAE,CAAC,CAAEC,KAAK,CAAE,SAAS,CAAEC,IAAI,CAAE,YAAa,CAAC,CAAC,CAE1D,GAAIR,KAAK,CAAE,CACTG,OAAO,CAACH,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC/C,CACF,CAAC,CAGD,KAAM,CAAAS,MAAM,CAAG,KAAAA,CAAA,GAAY,CAC3B,KAAM,CAAET,KAAM,CAAC,CAAG,KAAM,CAAAN,QAAQ,CAC/BO,IAAI,CAAC,WAAW,CAAC,CACjBS,MAAM,CAAC,CAAEC,IAAI,CAAE,WAAY,CAAC,CAAC,CAC7BC,EAAE,CAAC,IAAI,CAAE,CAAC,CAAC,CAEZ,GAAIZ,KAAK,CAAE,CACTG,OAAO,CAACH,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC9C,CACA,CAAC,CAGDf,SAAS,CAAC,IAAM,CACda,UAAU,CAAC,CAAC,CAAE;AACdM,MAAM,CAAC,CAAC,CACRK,MAAM,CAAC,CAAC,CACV,CAAC,CAAE,EAAE,CAAC,CAEN,mBACElB,KAAA,QAAKsB,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBzB,IAAA,OAAAyB,QAAA,CAAI,eAAa,CAAI,CAAC,cACtBzB,IAAA,QAAKwB,SAAS,CAAC,OAAO,CAAAC,QAAA,CACnBlB,KAAK,CAACmB,GAAG,CAAEC,IAAI,eACd3B,IAAA,QAAmBwB,SAAS,CAAC,MAAM,EAAzBG,IAAI,CAACV,EACV,CACN,CAAC,CACC,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAAX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}